/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.sql.*;
import clases.Conexion;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

public class InformacionCliente extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel();
    int id_clientUp = 0;
    public static int idEquipo = 0;
    String user = "";

    
    public InformacionCliente() {
        initComponents();
        user = Login.user;
        id_clientUp = GestionarClientes.id_clientUp;

        setSize(630, 450);
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(),
                label_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        label_wallpaper.setIcon(icon);
        this.repaint();

        try {
            Connection cn = Conexion.conect();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from clientes where id_cliente = '" + id_clientUp + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                setTitle("Información del cliente " + rs.getString("nombre_cliente") + " - Sesión de " + user);
                label_titleInfo.setText("Información del Cliente " + rs.getString("nombre_cliente"));

                txt_name.setText(rs.getString("nombre_cliente"));
                txt_mail.setText(rs.getString("mail_cliente"));
                txt_phone.setText(rs.getString("tel_cliente"));
                txt_addres.setText(rs.getString("dir_cliente"));
                txt_modifiedBy.setText(rs.getString("ultima_modificacion"));
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("ERROR en cargar usuario. " + e);
            JOptionPane.showMessageDialog(null, "¡¡ERROR al cargar!!, Contacte al Administrador.");

        }

        try {
            Connection cnt = Conexion.conect();
            PreparedStatement pst = cnt.prepareStatement(
                    "select id_equipo, tipo_equipo, marca, status from equipos where id_cliente = '"
                    + id_clientUp + "'");
            ResultSet rs = pst.executeQuery();

            table_team = new JTable(model);
            jScrollPane1.setViewportView(table_team);

            model.addColumn("Id Equipo");
            model.addColumn("Tipo de Equipo");
            model.addColumn("Marca");
            model.addColumn("Estatus");

            while (rs.next()) {
                Object[] row = new Object[4];
                for (int i = 0; i < 4; i++) {
                    row[i] = rs.getObject(i + 1);
                }
                model.addRow(row);
            }
            cnt.close();

        } catch (SQLException e) {
            System.err.println("ERROR en el llenado de la tabla equipos.");
        }

        table_team.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row_point = table_team.rowAtPoint(e.getPoint());
                int column_point = 0;

                if (row_point > -1) {
                    idEquipo = (int) model.getValueAt(row_point, column_point);
                    InformacionEquipo Infomation_team = new InformacionEquipo();
                    Infomation_team.setVisible(true);
                }
            }
        });
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_titleInfo = new javax.swing.JLabel();
        label_name = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        label_mail = new javax.swing.JLabel();
        txt_mail = new javax.swing.JTextField();
        label_phone = new javax.swing.JLabel();
        txt_phone = new javax.swing.JTextField();
        label_addres = new javax.swing.JLabel();
        txt_addres = new javax.swing.JTextField();
        label_modifiedBy = new javax.swing.JLabel();
        txt_modifiedBy = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_team = new javax.swing.JTable();
        btn_register = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        label_footer = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_titleInfo.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 24)); // NOI18N
        label_titleInfo.setForeground(new java.awt.Color(255, 255, 255));
        label_titleInfo.setText("Información del Cliente");
        getContentPane().add(label_titleInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        label_name.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 0, 12)); // NOI18N
        label_name.setForeground(new java.awt.Color(255, 255, 255));
        label_name.setText("Nombre:");
        getContentPane().add(label_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        txt_name.setBackground(new java.awt.Color(153, 153, 255));
        txt_name.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_name.setForeground(new java.awt.Color(255, 255, 255));
        txt_name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 210, -1));

        label_mail.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 0, 12)); // NOI18N
        label_mail.setForeground(new java.awt.Color(255, 255, 255));
        label_mail.setText("email:");
        getContentPane().add(label_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        txt_mail.setBackground(new java.awt.Color(153, 153, 255));
        txt_mail.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_mail.setForeground(new java.awt.Color(255, 255, 255));
        txt_mail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_mail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 210, -1));

        label_phone.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 0, 12)); // NOI18N
        label_phone.setForeground(new java.awt.Color(255, 255, 255));
        label_phone.setText("telefono:");
        getContentPane().add(label_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        txt_phone.setBackground(new java.awt.Color(153, 153, 255));
        txt_phone.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_phone.setForeground(new java.awt.Color(255, 255, 255));
        txt_phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_phone.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        label_addres.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 0, 12)); // NOI18N
        label_addres.setForeground(new java.awt.Color(255, 255, 255));
        label_addres.setText("Direccion:");
        getContentPane().add(label_addres, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        txt_addres.setBackground(new java.awt.Color(153, 153, 255));
        txt_addres.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_addres.setForeground(new java.awt.Color(255, 255, 255));
        txt_addres.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_addres.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_addres, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 210, -1));

        label_modifiedBy.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 0, 12)); // NOI18N
        label_modifiedBy.setForeground(new java.awt.Color(255, 255, 255));
        label_modifiedBy.setText("Ultima Modificacion:");
        getContentPane().add(label_modifiedBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        txt_modifiedBy.setBackground(new java.awt.Color(153, 153, 255));
        txt_modifiedBy.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 16)); // NOI18N
        txt_modifiedBy.setForeground(new java.awt.Color(255, 255, 255));
        txt_modifiedBy.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_modifiedBy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_modifiedBy.setEnabled(false);
        getContentPane().add(txt_modifiedBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 210, -1));

        table_team.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_team);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 380, 180));

        btn_register.setBackground(new java.awt.Color(153, 153, 255));
        btn_register.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        btn_register.setForeground(new java.awt.Color(255, 255, 255));
        btn_register.setText("Registrar Equipo");
        btn_register.setBorder(null);
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });
        getContentPane().add(btn_register, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 210, 35));

        btn_update.setBackground(new java.awt.Color(153, 153, 255));
        btn_update.setFont(new java.awt.Font("Montserrat", 1, 18)); // NOI18N
        btn_update.setForeground(new java.awt.Color(255, 255, 255));
        btn_update.setText("Actualizar Cliente");
        btn_update.setBorder(null);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });
        getContentPane().add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 210, 35));

        btn_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/impresora.png"))); // NOI18N
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        getContentPane().add(btn_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 120, 100));

        label_footer.setText("Creado por MrlnTrrzs13");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, -1, -1));
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        RegistrarEquipo registerTeam = new RegistrarEquipo();
        registerTeam.setVisible(true);
    }//GEN-LAST:event_btn_registerActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        int validation = 0;
        String name, mail, phone, addres;

        name = txt_name.getText().trim();
        mail = txt_mail.getText().trim();
        phone = txt_phone.getText().trim();
        addres = txt_addres.getText().trim();

        if (name.equals("")) {
            txt_name.setBackground(Color.red);
            validation++;
        }
        if (mail.equals("")) {
            txt_mail.setBackground(Color.red);
            validation++;
        }
        if (phone.equals("")) {
            txt_phone.setBackground(Color.red);
            validation++;
        }
        if (addres.equals("")) {
            txt_addres.setBackground(Color.red);
            validation++;
        }

        if (validation == 0) {
            try {
                Connection cn = Conexion.conect();
                PreparedStatement pst = cn.prepareStatement(
                        "update clientes set nombre_cliente=?, mail_cliente=?, tel_cliente=?, dir_cliente=?, ultima_modificacion=? "
                        + "where id_cliente = '" + id_clientUp + "'");

                pst.setString(1, name);
                pst.setString(2, mail);
                pst.setString(3, phone);
                pst.setString(4, addres);
                pst.setString(5, user);

                pst.executeUpdate();
                cn.close();
                Clear();

                txt_name.setBackground(Color.green);
                txt_mail.setBackground(Color.green);
                txt_phone.setBackground(Color.green);
                txt_addres.setBackground(Color.green);
                txt_modifiedBy.setText(user);

                JOptionPane.showMessageDialog(null, "Actualización Correcta.");
                this.dispose();

            } catch (SQLException e) {
                System.err.println("ERROR en actualizar cliente.");
                JOptionPane.showMessageDialog(null, "¡¡ERROR al actualizar cliente!!, contacte al administrador");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debes de llenar todos los campos.");
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        Document document = new Document();

        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(document, new FileOutputStream(ruta + "/Documents/" + txt_name.getText().trim() + ".pdf"));

            com.itextpdf.text.Image header = com.itextpdf.text.Image.getInstance("src/images/BannerPDF.jpg");
            header.scaleToFit(650, 1000);
            header.setAlignment(Chunk.ALIGN_CENTER);

            Paragraph paragraph = new Paragraph();
            paragraph.setAlignment(Paragraph.ALIGN_CENTER);
            paragraph.add("Información del cliente. \n\n");
            paragraph.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));

            document.open();
            document.add(header);
            document.add(paragraph);

            PdfPTable table_client = new PdfPTable(5);
            table_client.addCell("ID");
            table_client.addCell("Nombre");
            table_client.addCell("Email");
            table_client.addCell("Telefono");
            table_client.addCell("Dirección");

            try {
                Connection cn = Conexion.conect();
                PreparedStatement pst = cn.prepareStatement(
                        "select * from clientes where id_cliente = '" + id_clientUp + "'");
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    do {
                        table_client.addCell(rs.getString(1));
                        table_client.addCell(rs.getString(2));
                        table_client.addCell(rs.getString(3));
                        table_client.addCell(rs.getString(4));
                        table_client.addCell(rs.getString(5));

                    } while (rs.next());
                    document.add(table_client);
                }

                Paragraph paragraph2 = new Paragraph();
                paragraph2.setAlignment(Paragraph.ALIGN_CENTER);
                paragraph2.add("\n\n Equipos Registrados. \n\n");
                paragraph2.setFont(FontFactory.getFont("Tahoma", 14, Font.BOLD, BaseColor.DARK_GRAY));

                document.add(paragraph2);
                PdfPTable team_table = new PdfPTable(4);
                team_table.addCell("Id Equipo");
                team_table.addCell("Tipo");
                team_table.addCell("Marca");
                team_table.addCell("Estatus");

                try {
                    Connection cn2 = Conexion.conect();
                    PreparedStatement pst2 = cn.prepareStatement(
                            "select id_equipo, tipo_equipo, marca, status from equipos where id_cliente = '" + id_clientUp + "'");

                    ResultSet rs2 = pst2.executeQuery();
                    
                    if (rs2.next()) {
                        do {                            
                            team_table.addCell(rs2.getString(1));
                            team_table.addCell(rs2.getString(2));
                            team_table.addCell(rs2.getString(3));
                            team_table.addCell(rs2.getString(4));
                            
                        } while (rs2.next());
                        document.add(team_table);
                    }
                    
                } catch (SQLException e) {
                    System.err.println("ERROR al cargar equipos. " + e);
                }

            } catch (SQLException e) {
                System.err.println("ERROR al obtener datos del cliente " + e);
            }
            document.close();
            JOptionPane.showMessageDialog(null, "Reporte creado correctamente.");

        } catch (DocumentException | IOException e) {
            System.err.println("ERROR en PDF o ruta de Imagen. " + e);
            JOptionPane.showMessageDialog(null, "ERROR al generar PDF, contacte al Administrador.");
        }
    }//GEN-LAST:event_btn_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(() -> {
            new InformacionCliente().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_register;
    private javax.swing.JButton btn_update;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_addres;
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_mail;
    private javax.swing.JLabel label_modifiedBy;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_phone;
    private javax.swing.JLabel label_titleInfo;
    private javax.swing.JLabel label_wallpaper;
    private javax.swing.JTable table_team;
    private javax.swing.JTextField txt_addres;
    private javax.swing.JTextField txt_mail;
    private javax.swing.JTextField txt_modifiedBy;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_phone;
    // End of variables declaration//GEN-END:variables

    public void Clear() {
        txt_name.setText("");
        txt_mail.setText("");
        txt_phone.setText("");
        txt_addres.setText("");
    }
}
