/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import clases.Conexion;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.*;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;

/**
 *
 * @author mrln
 */
public class GraficarEstatus extends javax.swing.JFrame {

    int new_income, not_repaired, in_review, repaired, delivered;
    String user;
    String[] name_vector = new String[5];
    int[] quantity_vector = new int[5];

    /**
     * Creates new form GraficarEstatus
     */
    public GraficarEstatus() {
        initComponents();
        user = Login.user;

        setTitle("Tecnico - Sesión de " + user);
        setSize(550, 450);
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(label_wallpaper.getWidth(),
                label_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        label_wallpaper.setIcon(icon);
        this.repaint();

        try {
            Connection cn = Conexion.conect();
            PreparedStatement pst = cn.prepareStatement(
                    "select status, count(status) as Cantidad from equipos group by status");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                int position = 0;
                do {
                    name_vector[position] = rs.getString(1);
                    quantity_vector[position] = rs.getInt(2);

                    if (name_vector[position].equalsIgnoreCase("En revision")) {
                        in_review = quantity_vector[position];
                    } else if (name_vector[position].equalsIgnoreCase("Reparado")) {
                        repaired = quantity_vector[position];
                    } else if (name_vector[position].equalsIgnoreCase("Entregado")) {
                        delivered = quantity_vector[position];
                    } else if (name_vector[position].equalsIgnoreCase("No reparado")) {
                        not_repaired = quantity_vector[position];
                    } else if (name_vector[position].equalsIgnoreCase("Nuevo ingreso")){
                        new_income = quantity_vector[position];
                    }
                    position++;

                } while (rs.next());
            }

        } catch (SQLException e) {
            System.err.println("Error en conectar con la Base de datos.");
            JOptionPane.showMessageDialog(null, "¡¡Error!!, contacte al administrador.");
        }
        repaint();

    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_title = new javax.swing.JLabel();
        label_footer = new javax.swing.JLabel();
        label_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label_title.setFont(new java.awt.Font("DejaVuSansMono Nerd Font", 1, 24)); // NOI18N
        label_title.setForeground(new java.awt.Color(255, 255, 255));
        label_title.setText("Grafica de Estatus");
        getContentPane().add(label_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        label_footer.setText("Creado por MrlnTrrzs13");
        getContentPane().add(label_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, -1, -1));
        getContentPane().add(label_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GraficarEstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GraficarEstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GraficarEstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GraficarEstatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GraficarEstatus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel label_footer;
    private javax.swing.JLabel label_title;
    private javax.swing.JLabel label_wallpaper;
    // End of variables declaration//GEN-END:variables

    public int MostRepeatedStatus(int newIncome, int notRepaired, int inReview, int Repaired, int Delivered) {
        if (newIncome > notRepaired && newIncome > inReview && newIncome > Repaired && newIncome > Delivered) {
            return newIncome;
        } else if (notRepaired > inReview && notRepaired > Repaired && notRepaired > Delivered) {
            return notRepaired;
        } else if (inReview > Repaired && inReview > Delivered) {
            return inReview;
        } else if (Repaired > Delivered) {
            return Repaired;
        } else {
            return Delivered;
        }
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        int most_repeated_status = MostRepeatedStatus(new_income, not_repaired, in_review, repaired, delivered);

        int newIncome_lenght = new_income * 400 / most_repeated_status;
        int notRepaired_lenght = not_repaired * 400 / most_repeated_status;
        int inReview_lenght = in_review * 400 / most_repeated_status;
        int Repaired_lenght = repaired * 400 / most_repeated_status;
        int Delivered_lenght = delivered * 400 / most_repeated_status;

        g.setColor(new Color(240, 248, 0));//amarillo
        g.fillRect(100, 100, newIncome_lenght, 40);
        g.drawString("Nuevo Ingreso", 10, 118);
        g.drawString("Cantidad:" + new_income, 10, 133);

        g.setColor(new Color(255, 0, 0));//rojo
        g.fillRect(100, 150, notRepaired_lenght, 40);
        g.drawString("No Reparado", 10, 168);
        g.drawString("Cantidad:" + not_repaired, 10, 183);

        g.setColor(new Color(0, 0, 0));//negro
        g.fillRect(100, 200, inReview_lenght, 40);
        g.drawString("En Revisión", 10, 218);
        g.drawString("Cantidad:" + in_review, 10, 233);

        g.setColor(new Color(255, 255, 255));//Blanco
        g.fillRect(100, 250, Repaired_lenght, 40);
        g.drawString("Reparado", 10, 268);
        g.drawString("Cantidad:" + repaired, 10, 283);

        g.setColor(new Color(0, 85, 0));//verde
        g.fillRect(100, 300, Delivered_lenght, 40);
        g.drawString("Entregado", 10, 318);
        g.drawString("Cantidad:" + delivered, 10, 333);
    }
}
